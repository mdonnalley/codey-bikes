name: Fix issues with Codey

on:
    issues:
        types: [opened]
    workflow_dispatch:
        inputs:
            issue_number:
                description: 'Issue number to process'
                required: true
                type: number

jobs:
    agent-codey:
        runs-on: ubuntu-latest
        steps:
            - name: Checkout repository
              uses: actions/checkout@v4

            - name: Get issue data
              id: issue-data
              uses: actions/github-script@v7
              with:
                  script: |
                      let issueNumber, issueTitle, issueBody, issueAuthor;

                      if (context.eventName === 'issues') {
                          // Triggered by issue event
                          issueNumber = context.payload.issue.number;
                          issueTitle = context.payload.issue.title;
                          issueBody = context.payload.issue.body;
                          issueAuthor = context.payload.issue.user.login;
                      } else {
                          // Manually triggered with workflow_dispatch
                          issueNumber = ${{ inputs.issue_number }};

                          // Fetch issue data
                          const { data: issue } = await github.rest.issues.get({
                              owner: context.repo.owner,
                              repo: context.repo.repo,
                              issue_number: issueNumber
                          });

                          issueTitle = issue.title;
                          issueBody = issue.body;
                          issueAuthor = issue.user.login;
                      }

                      // Set outputs
                      core.setOutput('number', issueNumber);
                      core.setOutput('title', issueTitle);
                      core.setOutput('body', issueBody);
                      core.setOutput('author', issueAuthor);

                      console.log(`Processing issue #${issueNumber}: ${issueTitle}`);

            - name: Set up Node.js
              uses: actions/setup-node@v4
              with:
                  node-version: '22'
                  cache: 'npm'

            - name: Clone codey repository
              run: |
                  # Clone to a temporary directory outside the workspace
                  cd /tmp
                  git clone https://github.com/mdonnalley/gemini-cli.git
                  cd gemini-cli
                  npm ci
                  npm run build

            # - name: Set up Salesforce CLI
            #   run: npm install -g @salesforce/cli

            # - name: Auth
            #   run: sf login org access-token --no-prompt --instance-url ${{ secrets.SF_INSTANCE_URL }}
            #   env:
            #       SF_ACCESS_TOKEN: ${{ secrets.SF_ACCESS_TOKEN }}

            - name: Codey will fix it
              id: codey-will-fix-it
              run: |
                  echo "Running Codey..."
                  echo "Issue number: ${{ steps.issue-data.outputs.number }}"
                  echo "Issue title: ${{ steps.issue-data.outputs.title }}"
                  echo "Issue author: ${{ steps.issue-data.outputs.author }}"

                  PROMPT="You are a coding assistant specializing in fixing issues in this project. Analyze the issue and make the necessary changes to resolve it. After you have completed the changes, you MUST write a new file (pr-description.txt) containing a brief PR description of the changes you made. After you have completed the changes, you MUST write a new file (commit-msg.txt) containing a conventional commit message for the changes you made. ISSUE TITLE: ${{ steps.issue-data.outputs.title }} ISSUE BODY: ${{ steps.issue-data.outputs.body }}"

                  echo "Using prompt: $PROMPT"
                  node /tmp/gemini-cli/scripts/start.js --prompt "$PROMPT" --yolo --model gemini-2.5-flash

                  # Read the PR description from the file if it exists
                  if [ -f "pr-description.txt" ]; then
                    PR_DESCRIPTION=$(cat pr-description.txt)
                    echo "pr-description=$PR_DESCRIPTION" >> $GITHUB_OUTPUT
                    echo "Found pr-description.txt with content: $PR_DESCRIPTION"
                    rm pr-description.txt
                  else
                    echo "pr-description.txt not found"
                    echo "pr-description=Automated fix by Codey" >> $GITHUB_OUTPUT
                  fi

                  # Read the commit message from the file if it exists
                  if [ -f "commit-msg.txt" ]; then
                    COMMIT_MSG=$(cat commit-msg.txt)
                    echo "commit-msg=$COMMIT_MSG" >> $GITHUB_OUTPUT
                    echo "Found commit-msg.txt with content: $COMMIT_MSG"
                    rm commit-msg.txt
                  else
                    echo "commit-msg.txt not found"
                    echo "commit-msg=fix: automated fix by Codey" >> $GITHUB_OUTPUT
                  fi

              env:
                  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
                  ISSUE_NUMBER: ${{ steps.issue-data.outputs.number }}
                  ISSUE_TITLE: ${{ steps.issue-data.outputs.title }}
                  ISSUE_AUTHOR: ${{ steps.issue-data.outputs.author }}
                  ISSUE_BODY: ${{ steps.issue-data.outputs.body }}
                  CODEY_IGNORE_CHAT_COMPRESSION: true
                  # SF_LLMG_USERNAME: ${{ secrets.SF_LLMG_USERNAME }}
                  GEMINI_API_KEY: ${{ secrets.GEMINI_API_KEY }}

            - name: Create branch and commit changes
              run: |
                  # Configure git
                  git config --local user.email "codey@agentforce.com"
                  git config --local user.name "Codey"

                  # Create and switch to new branch
                  BRANCH_NAME="codey_${{ steps.issue-data.outputs.number }}"
                  git checkout -b "$BRANCH_NAME"

                  # Add all changes
                  git add -A

                  # Check if there are changes to commit
                  if git diff --cached --quiet; then
                    echo "No changes to commit"
                    exit 0
                  fi

                  # Commit changes
                    git commit -m "${{ steps.codey-will-fix-it.outputs.commit-msg }}"

                  # Push the branch, handling potential conflicts
                  if ! git push origin "$BRANCH_NAME"; then
                    echo "Push failed, likely due to branch already existing. Trying with force..."
                    git push origin "$BRANCH_NAME" --force
                  fi

            - name: Create Pull Request
              uses: actions/github-script@v7
              with:
                script: |
                  const branchName = `codey_${{ steps.issue-data.outputs.number }}`;
                  const prDescription = `${{ steps.codey-will-fix-it.outputs.pr-description }}` || 'Automated fix by Codey';

                  try {
                    const { data: pullRequest } = await github.rest.pulls.create({
                      owner: context.repo.owner,
                      repo: context.repo.repo,
                      title: `Codey fixes issue #${{ steps.issue-data.outputs.number }}`,
                      head: branchName,
                      base: 'main',
                      body: `${prDescription}

                  ---
                  **Original Issue:** ${{ steps.issue-data.outputs.title }}
                  **Issue Author:** @${{ steps.issue-data.outputs.author }}
                  **Generated by:** Codey

                  Closes #${{ steps.issue-data.outputs.number }}`
                    });

                    console.log(`Created PR #${pullRequest.number}: ${pullRequest.html_url}`);

                  } catch (error) {
                    console.error('Error creating PR:', error);

                    // Comment on issue if PR creation fails
                    await github.rest.issues.createComment({
                      issue_number: ${{ steps.issue-data.outputs.number }},
                      owner: context.repo.owner,
                      repo: context.repo.repo,
                      body: `‚ùå Failed to create pull request with automated changes. Please check the workflow logs for details.`
                    });
                  }
