name: Fix issues with Codey

on:
    issues:
        types: [labeled]
    workflow_dispatch:
        inputs:
            issue_number:
                description: 'Issue number to process'
                required: true
                type: number

jobs:
    agent-codey:
        runs-on: ubuntu-latest
        steps:
            - name: Checkout repository
              uses: actions/checkout@v4

            - name: Get issue data
              id: issue-data
              uses: actions/github-script@v7
              with:
                  script: |
                      let issueNumber, issueTitle, issueBody, issueAuthor;

                      if (context.eventName === 'issues') {
                          // Check if the 'codey' label was added
                          if (context.payload.action === 'labeled' && context.payload.label.name !== 'codey') {
                              console.log(`Label '${context.payload.label.name}' added, but not 'codey'. Skipping.`);
                              core.setFailed('Workflow only runs when "codey" label is added');
                              return;
                          }

                          // Triggered by label event
                          issueNumber = context.payload.issue.number;
                          issueTitle = context.payload.issue.title;
                          issueBody = context.payload.issue.body;
                          issueAuthor = context.payload.issue.user.login;
                      } else {
                          // Manually triggered with workflow_dispatch
                          issueNumber = context.payload.inputs.issue_number;

                          // Fetch issue data
                          const { data: issue } = await github.rest.issues.get({
                              owner: context.repo.owner,
                              repo: context.repo.repo,
                              issue_number: issueNumber
                          });

                          issueTitle = issue.title;
                          issueBody = issue.body;
                          issueAuthor = issue.user.login;
                      }

                      // Set outputs
                      core.setOutput('number', issueNumber);
                      core.setOutput('title', issueTitle);
                      core.setOutput('body', issueBody);
                      core.setOutput('author', issueAuthor);

                      console.log(`Processing issue #${issueNumber}: ${issueTitle}`);

            - name: Comment on issue
              uses: actions/github-script@v7
              with:
                  script: |
                      await github.rest.issues.createComment({
                        issue_number: ${{ steps.issue-data.outputs.number }},
                        owner: context.repo.owner,
                        repo: context.repo.repo,
                        body: `**Codey has been assigned to this issue!**

                      I'm analyzing the issue and will create a pull request with the fix shortly. Please hold tight while I work on this.

                      _With 💙 from Codey, your DX Coding agent_`
                      });

            - name: Set up Node.js
              uses: actions/setup-node@v4
              with:
                  node-version: '22'
                  cache: 'npm'

            - name: Clone codey repository
              run: |
                  # Clone to a temporary directory outside the workspace
                  cd /tmp
                  git clone https://github.com/mdonnalley/gemini-cli.git
                  cd gemini-cli
                  npm ci
                  npm run build

            - name: Set up Salesforce CLI
              run: npm install -g @salesforce/cli

            - name: Auth
              run: sf login org access-token --no-prompt --instance-url ${{ secrets.SF_INSTANCE_URL }}
              env:
                  SF_ACCESS_TOKEN: ${{ secrets.SF_ACCESS_TOKEN }}

            - name: Codey will fix it
              id: codey-will-fix-it
              run: |
                  echo "Running Codey..."
                  echo "Issue number: $ISSUE_NUMBER"
                  echo "Issue title: $ISSUE_TITLE"
                  echo "Issue author: $ISSUE_AUTHOR"

                  PROMPT="You are a coding assistant specializing in fixing issues in this project. Analyze the issue and make the necessary changes to resolve it. After you have completed the changes, you MUST write a new file (pr-description.txt) containing an excellent PR description of the changes you made (note that the description should not include anything resembling a conventional commit). After you have completed the changes, you MUST write a new file (commit-msg.txt) containing a conventional commit message for the changes you made. ISSUE TITLE: $ISSUE_TITLE ISSUE BODY: $ISSUE_BODY"

                  echo "Using prompt: $PROMPT"
                  node /tmp/gemini-cli/scripts/start.js --prompt "$PROMPT" --yolo --model gemini-2.5-flash

                  # Read the PR description from the file if it exists
                  if [ -f "pr-description.txt" ]; then
                    echo "pr-description<<EOF" >> $GITHUB_OUTPUT
                    cat pr-description.txt >> $GITHUB_OUTPUT
                    echo "" >> $GITHUB_OUTPUT
                    echo "EOF" >> $GITHUB_OUTPUT
                    echo "Found pr-description.txt with content:"
                    cat pr-description.txt
                    rm pr-description.txt
                  else
                    echo "pr-description.txt not found"
                    echo "pr-description=Automated fix by Codey" >> $GITHUB_OUTPUT
                  fi

                  # Read the commit message from the file if it exists
                  if [ -f "commit-msg.txt" ]; then
                    echo
                    echo "commit-msg<<EOF" >> $GITHUB_OUTPUT
                    cat commit-msg.txt >> $GITHUB_OUTPUT
                    echo "" >> $GITHUB_OUTPUT
                    echo "EOF" >> $GITHUB_OUTPUT
                    echo "Found commit-msg.txt with content:"
                    cat commit-msg.txt
                    rm commit-msg.txt
                  else
                    echo "commit-msg.txt not found"
                    echo "commit-msg=fix: automated fix by Codey" >> $GITHUB_OUTPUT
                  fi

              env:
                  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
                  ISSUE_NUMBER: ${{ steps.issue-data.outputs.number }}
                  ISSUE_TITLE: ${{ steps.issue-data.outputs.title }}
                  ISSUE_AUTHOR: ${{ steps.issue-data.outputs.author }}
                  ISSUE_BODY: ${{ steps.issue-data.outputs.body }}
                  CODEY_IGNORE_CHAT_COMPRESSION: true
                  SF_LLMG_USERNAME: ${{ secrets.SF_LLMG_USERNAME }}
                  # GEMINI_API_KEY: ${{ secrets.GEMINI_API_KEY }}

            - name: Create branch and commit changes
              run: |
                  # Configure git
                  git config --local user.email "codey@agentforce.com"
                  git config --local user.name "Codey"

                  # Create and switch to new branch
                  BRANCH_NAME="WI-00273${{ steps.issue-data.outputs.number }}"
                  git checkout -b "$BRANCH_NAME"

                  # Add all changes
                  git add -A

                  # Check if there are changes to commit
                  if git diff --cached --quiet; then
                    echo "No changes to commit"
                    exit 0
                  fi

                  # Commit changes
                  echo "${{ steps.codey-will-fix-it.outputs.commit-msg }}" > /tmp/commit-message.txt
                  git commit -F /tmp/commit-message.txt

                  # Push the branch, handling potential conflicts
                  if ! git push origin "$BRANCH_NAME"; then
                    echo "Push failed, likely due to branch already existing. Trying with force..."
                    git push origin "$BRANCH_NAME" --force
                  fi

            - name: Create Pull Request
              id: create-pr
              uses: actions/github-script@v7
              env:
                  PR_DESCRIPTION: ${{ steps.codey-will-fix-it.outputs.pr-description }}
                  COMMIT_MSG: ${{ steps.codey-will-fix-it.outputs.commit-msg }}
              with:
                  script: |
                      const branchName = `codey_${{ steps.issue-data.outputs.number }}`;
                      const prDescription = process.env.PR_DESCRIPTION || 'Automated fix by Codey';
                      const commitMsgLines = (process.env.COMMIT_MSG || `Codey fixes issue #${{ steps.issue-data.outputs.number }}`).split('\n');
                      const commitMsg = commitMsgLines[0];

                      try {
                        const { data: pullRequest } = await github.rest.pulls.create({
                          owner: context.repo.owner,
                          repo: context.repo.repo,
                          title: commitMsg,
                          head: branchName,
                          base: 'main',
                          body: `${prDescription}

                      ---
                      **Written by:** Codey
                      **Original Issue:** [${{ steps.issue-data.outputs.title }}](#${{ steps.issue-data.outputs.number }})
                      **Issue Author:** @${{ steps.issue-data.outputs.author }}

                      Closes #${{ steps.issue-data.outputs.number }}`
                        });

                        // Add label to the PR
                        await github.rest.issues.addLabels({
                          owner: context.repo.owner,
                          repo: context.repo.repo,
                          issue_number: pullRequest.number,
                          labels: ['written-by-codey']
                        });

                        console.log(`Created PR #${pullRequest.number}: ${pullRequest.html_url}`);

                        // Store PR details for completion comment
                        core.setOutput('pr-number', pullRequest.number);
                        core.setOutput('pr-url', pullRequest.html_url);

                      } catch (error) {
                        console.error('Error creating PR:', error);

                        // Comment on issue if PR creation fails
                        await github.rest.issues.createComment({
                          issue_number: ${{ steps.issue-data.outputs.number }},
                          owner: context.repo.owner,
                          repo: context.repo.repo,
                          body: `❌ Failed to create pull request with automated changes. Please check the workflow logs for details.`
                        });
                      }

            - name: Comment on completion
              if: always()
              uses: actions/github-script@v7
              with:
                  script: |
                      const workflowResult = '${{ job.status }}';
                      const prNumber = '${{ steps.create-pr.outputs.pr-number }}';
                      const prUrl = '${{ steps.create-pr.outputs.pr-url }}';
                      let message;

                      if (workflowResult === 'success' && prNumber) {
                        message = `✅ **Codey created a fix for this issue!**

                      I've analyzed the issue and created a pull request with the proposed fix: **[#${prNumber}](${prUrl})**

                      Please review the changes and merge if they look good.

                      _Thanks for teaming up with Codey!_`;
                      } else if (workflowResult === 'success') {
                        message = `✅ **Codey created a fix for this issue!**

                      I've analyzed the issue and created a pull request with the proposed fix. Please review the changes and merge if they look good.

                      _Thanks for teaming up with Codey!_`;
                      } else {
                        message = `❌ **Codey encountered a problem while fixing this issue.**

                      I wasn't able to complete the work on this issue. Please check the workflow logs for more details or try again.

                      _I apologize for the inconvenience!_`;
                      }

                      await github.rest.issues.createComment({
                        issue_number: ${{ steps.issue-data.outputs.number }},
                        owner: context.repo.owner,
                        repo: context.repo.repo,
                        body: message
                      });
